apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  namespace: default
data:
  nginx.conf: |-
    worker_processes 1; 
    events {
        worker_connections 1024;
    }
    http {
        include mime.types;
        sendfile on;
        keepalive_timeout 65;
        limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
        server {
            listen 80;
            server_name localhost;
            access_log /var/log/nginx/access.log combined;
            limit_req zone=one burst=20 nodelay;
            root /usr/share/nginx/html;
            location / {
                index index.html index.htm index.php;
            }
            location ~ \.php$ {
                fastcgi_pass php-service:9000;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                include fastcgi_params;
            }
            location /golang/ {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_redirect off;
                proxy_pass http://golang-service:8080/;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
        - name: nginx-config-volumn
          configMap:
            defaultMode: 420
            name: nginx-configmap
      containers:
        - name: nginx
          image: docker.io/lwenjim/nginx:test
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-config-volumn
              subPath: nginx.conf
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: ClusterIP
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-deployment
  labels:
    app: golang
spec:
  replicas: 2
  selector:
    matchLabels:
      app: golang
  template:
    metadata:
      labels:
        app: golang
    spec:
      containers:
        - name: golang
          image: docker.io/lwenjim/golang:test
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: golang-service
spec:
  type: ClusterIP
  selector:
    app: golang
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-deployment
  labels:
    app: php
spec:
  replicas: 2
  selector:
    matchLabels:
      app: php
  template:
    metadata:
      labels:
        app: php
    spec:
      containers:
        - name: php
          image: docker.io/lwenjim/php:test
          ports:
            - containerPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: php-service
spec:
  type: ClusterIP
  selector:
    app: php
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-configmap
  namespace: default
data:
  redis.conf: |-
    daemonize no
    protected-mode yes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      volumes:
        - name: redis-config-volumn
          configMap:
            defaultMode: 420
            name: redis-configmap
      containers:
        - name: redis
          image: docker.io/lwenjim/redis:test
          volumeMounts:
            - mountPath: /usr/local/etc/redis/redis.conf
              name: redis-config-volumn
              subPath: redis.conf
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: nginx-ingress
spec:
  rules:
    - host: "a.bar.com"
      http:
        paths:
          - backend:
              service:
                name: nginx-service
                port:
                  number: 80
            pathType: Prefix
            path: "/"
